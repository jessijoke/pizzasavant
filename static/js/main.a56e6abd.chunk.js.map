{"version":3,"sources":["logo.svg","images/pizza-bg.jpg","Nav.js","Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","contentShift","PersistentDrawerRight","classes","useTheme","React","useState","open","setOpen","id","className","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","noWrap","IconButton","color","aria-label","edge","onClick","paragraph","Button","Drawer","anchor","paper","direction","Divider","List","ListItem","ListItemIcon","ListItemText","primary","table","minWidth","createData","name","personal","small","medium","large","rows","SimpleTable","Paper","elevation","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","App","Helmet","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a56e6abd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/pizza-bg.8c6071e6.jpg\";","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport './App.css';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport RestaurantMenuIcon from '@material-ui/icons/RestaurantMenu';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport LocalPizzaIcon from '@material-ui/icons/LocalPizza';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: 0,\r\n    },\r\n}));\r\n\r\n\r\nexport default function PersistentDrawerRight() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\nreturn (\r\n    <div id=\"mainDiv\" className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n        id=\"appBarCustom\"\r\n      >\r\n  \r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap className={classes.title} id=\"nameOverride\">\r\n                        Pizza Savant <LocalPizzaIcon id=\"logoIcon\"/>\r\n          </Typography>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"end\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(open && classes.hide)}\r\n                    >\r\n                        <MenuIcon id=\"menuIconOverride\"/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Typography paragraph className='testingThis'>\r\n                    Our famous wood fired pizza has been passed down through the family for over 200 years.<br />\r\n                    <Button id=\"menuBtn\">Menu</Button><Button id=\"locationBtn\">Location</Button>\r\n        </Typography>\r\n                \r\n            </main>\r\n           <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader} >\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronLeftIcon id=\"menuCarrot\" /> : <ChevronRightIcon id=\"menuCarrot2\"/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List>\r\n                    <ListItem\r\n                        /*button\r\n                        selected={selectedIndex === 0}\r\n                        onClick={(event) => handleListItemClick(event, 0)}*/\r\n                    >\r\n                        <ListItemIcon>\r\n                            <RestaurantMenuIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Menu\" />\r\n                    </ListItem>\r\n\r\n                    <ListItem\r\n                    /*button\r\n                    selected={selectedIndex === 0}\r\n                    onClick={(event) => handleListItemClick(event, 0)}*/\r\n                    >\r\n                        <ListItemIcon>\r\n                            <InfoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"About\"/>\r\n                    </ListItem>\r\n\r\n                    <ListItem\r\n                    /*button\r\n                    selected={selectedIndex === 0}\r\n                    onClick={(event) => handleListItemClick(event, 0)}*/\r\n                    >\r\n                        <ListItemIcon>\r\n                            <ContactPhoneIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Contact Us\"/>\r\n                    </ListItem>\r\n\r\n\r\n                    \r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './Styles.css';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, personal, small, medium, large) {\r\n  return { name, personal, small, medium, large };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cheese', '$6.50', '$9.50', '$11.50', '$12.50'),\r\n  createData('Pepperoni', '$7.00', '$10.00', '$12.00', '$13.00'),\r\n  createData('Meat Lovers', '$8.00', '$11.00', '$13.00', '$14.00'),\r\n  createData('Margherita', '$7.00', '$10.00', '$12.00', '$13.00'),\r\n  createData('BBQ', '$8.00', '$11.00', '$13.00', '$14.00'),\r\n  createData('Hawaiian', '$8.00', '$11.00', '$13.00', '$14.00'),\r\n  createData('Buffalo', '$8.00', '$11.00', '$13.00', '$14.00'),\r\n  createData('Vegetarian', '$7.00', '$10.00', '$12.00', '$13.00'),\r\n\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={1} id=\"paperTest\">\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Pizza</TableCell>\r\n                <TableCell align=\"right\">Personal</TableCell>\r\n                <TableCell align=\"right\">Small</TableCell>\r\n                <TableCell align=\"right\">Medium</TableCell>\r\n                <TableCell align=\"right\">Large</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.personal}</TableCell>\r\n                  <TableCell align=\"right\">{row.small}</TableCell>\r\n                  <TableCell align=\"right\">{row.medium}</TableCell>\r\n                  <TableCell align=\"right\">{row.large}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './Styles.css';\nimport './App.css';\nimport { Button } from '@material-ui/core';\nimport Nav from './Nav.js';\nimport './images/pizza-bg.jpg';\nimport { Helmet } from 'react-helmet'\nimport PizzaMenu from './Menu.js'\n\nconst TITLE = 'Pizza Savant'\n\nfunction App() {\n  return (\r\n      <div className=\"App\">\r\n        <Nav />\r\n            <PizzaMenu />\r\n          <Button>This is our first button</Button>\r\n\r\n          <Helmet>\r\n              <title>{TITLE}</title>\r\n          </Helmet>\r\n    </div>\r\n  );\r\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}